New QueryRevenue generated by CS-Primary calls + Frank's Quote Tickets WEEKLY
with order_calls as (
select
to_char(oo.created_at,'WW/MM/YYYY') order_created,
cr.object_id order_id,
oo.grand_total,
cc.user_id::varchar(255),
case when cc.user_id=173486 then 'Wilson Andrade'
when cc.user_id=176909 then 'José Rolando Pérez Núñez'
when cc.user_id=180985 then 'Cesar Callejas'
when cc.user_id=180987 then 'Daniel Mangalie'
when cc.user_id=185840 then 'Mauricio Henriquez'
end as agent
from calls_callrelation cr
left join calls_calllog cc on cr.call_id=cc.id
left join orders_order oo on cr.object_id=oo.order_id
where cr.content_type_id=55 and oo.created_at>='2021-12-06' and cc.user_id in (173486, 176909, 180985, 180987, 185840) and oo.status=7
group by order_created, cr.object_id, grand_total, user_id
order by 1),

calls_orders as (
select
order_created,
order_id,
grand_total,
case when agent in ('Wilson Andrade', 'José Rolando Pérez Núñez', 'Cesar Callejas', 'Daniel Mangalie', 'Mauricio Henriquez') then 'CS-Primary' end as agents
from order_calls
group by order_created, order_id, grand_total, agents
order by 1
),

tickets_quotes_orders as (
select
to_char(oo.created_at,'WW/MM/YYYY') order_created,
oo.order_id,
oo.grand_total,
case when tt.assigned_to_id=86875 then 'Frank' end as agent
from tickets_ticket tt
left join orders_quote q on tt.quote_id=q.id
left join orders_order oo on q.order_id=oo.order_id
where tt.assigned_to_id=86875 and tt.quote_id is not null and oo.status=7 and oo.created_at>='2021-12-06'
group by order_created, oo.order_id, oo.grand_total, agent
order by 1
),

summary_of_both as(
select * from calls_orders
UNION ALL
select * from tickets_quotes_orders
),

summary_of_both_index as (
select
order_created,
order_id,
grand_total,
agents,
ROW_NUMBER()OVER(PARTITION BY order_id ORDER BY order_id, agents) as index
from summary_of_both
order by 1,2),

finish as (
select
order_created,
sum(grand_total) total_revenue_CS_and_FrankQuoteTickets
from summary_of_both_index
where index=1
group by order_created
order by 1)

select * from finish


Recontact Rate per Agent
with inbound_calls_with_order as (
select
oo.created_at,
cr.object_id order_id,
cr.call_id::varchar(255),
cc.user_id
from calls_callrelation cr
left join calls_calllog cc on cr.call_id=cc.id
left join orders_order  oo on cr.object_id=oo.order_id
where oo.created_at>='2021-12-06' and cr.content_type_id=55 and cc.direction=1 and cc.user_id in (173486, 176909, 180985, 180987, 185840)
order by 1),

inbound_calls_per_order as (
select
created_at,
order_id,
count(distinct(call_id)) qty_calls
from inbound_calls_with_order
group by created_at,order_id
having count(distinct(call_id))>1),

agents_per_order as (
select
my.created_at order_created,
my.order_id,
cr.call_id::varchar(255),
cc.user_id,
case when cc.user_id=173486 then 'Wilson Andrade'
when cc.user_id=176909 then 'José Rolando Pérez Núñez'
when cc.user_id=180985 then 'Cesar Callejas'
when cc.user_id=180987 then 'Daniel Mangalie'
when cc.user_id=185840 then 'Mauricio Henriquez'
else 'Others'
end as agent,
cr.created_at call_created
from inbound_calls_per_order my
left join calls_callrelation cr on my.order_id=cr.object_id
left join calls_calllog cc on cr.call_id=cc.id
where cc.direction=1 and cc.user_id is not null
order by 1,6)

select
order_created,
order_id,
agent,
count(distinct(call_id)) qty_inbound_calls_per_order
from agents_per_order
group by order_created, order_id, agent
having agent!='Others'
order by 1 asc, 4 desc


Recontact Rate
with inbound_calls_with_order as (
select
oo.created_at,
cr.object_id order_id,
cr.call_id::varchar(255),
cc.user_id
from calls_callrelation cr
left join calls_calllog cc on cr.call_id=cc.id
left join orders_order  oo on cr.object_id=oo.order_id
where oo.created_at>='2021-01-01' and cr.content_type_id=55 and cc.direction=1),

inbound_calls_per_order as (
select
created_at,
order_id,
count(distinct(call_id)) qty_calls,
count(distinct(user_id)) qty_users
from inbound_calls_with_order
group by created_at,order_id),

orders_with_qty_calls as (
select
to_char(created_at,'MM/YYYY') order_created,
count(distinct(order_id)) all_orders,
case when qty_calls=1 then count(distinct(order_id)) end as one_call,
case when qty_calls>1 then count(distinct(order_id)) end as more_than_1_call,
case when qty_users=1 then count(distinct(order_id)) end as one_user,
case when qty_users>1 then count(distinct(order_id)) end as more_than_1_user
from inbound_calls_per_order
group by order_created,qty_calls, qty_users),

final_summary as(
select
order_created,
sum(all_orders)::integer total_orders_with_inbound_calls,
sum(one_call)::integer qty_orders_with_1_call,
sum(more_than_1_call)::integer qty_orders_with_more_than_1_call,
sum(one_user)::integer qty_orders_with_1_user,
sum(more_than_1_user)::integer qty_orders_with_more_than_1_users,
sum(more_than_1_call)/sum(all_orders) recontact_rate
from orders_with_qty_calls
group by order_created
order by 1)

select
*
from final_summary
order by 1

ALL Past Due Tickets_Live
WITH all_completed_tickets AS (
SELECT
tt.completed_at::date timestam_date,
count(distinct(tt.id)) total_completed_tickets,
tt.assigned_to_id agent_id,
e.full_name agent_name,
au.staff_type staff_type_id,
e.staff_type staff_type_name,
tt.category_id category_id,
tc.name category_name
from tickets_ticket tt
left join tickets_ticketcategory tc on tt.category_id=tc.id
left join employee e on tt.assigned_to_id=e.user_id
left join accounts_user au on tt.assigned_to_id=au.customer_ptr_id
where tt.status=7 and tt.completed_at::date=now()::date and au.is_active=True and au.is_staff=True
group by tt.assigned_to_id, e.full_name, au.staff_type, e.staff_type, tt.category_id, tc.name, tt.completed_at::date),

competed_past_due_tickets AS (
SELECT
tt.completed_at::date timestam_date,
count(distinct(tt.id)) qty_completed_past_due_tickets,
tt.assigned_to_id agent_id,
e.full_name agent_name,
au.staff_type staff_type_id,
e.staff_type staff_type_name,
tt.category_id category_id,
tc.name category_name
from tickets_ticket tt
left join tickets_ticketcategory tc on tt.category_id=tc.id
left join employee e on tt.assigned_to_id=e.user_id
left join accounts_user au on tt.assigned_to_id=au.customer_ptr_id
where tt.completed_at>tt.deadline and tt.status=7 and tt.completed_at::date=now()::date and au.is_active=True and au.is_staff=True
group by tt.assigned_to_id, e.full_name, au.staff_type, e.staff_type, tt.category_id, tc.name, tt.completed_at::date),

all_open_tickets AS (
SELECT
now()::date timestam_date,
count(distinct(tt.id)) total_open_tickets,
tt.assigned_to_id agent_id,
e.full_name agent_name,
au.staff_type staff_type_id,
e.staff_type staff_type_name,
tt.category_id category_id,
tc.name category_name
from tickets_ticket tt
left join tickets_ticketcategory tc on tt.category_id=tc.id
left join employee e on tt.assigned_to_id=e.user_id
left join accounts_user au on tt.assigned_to_id=au.customer_ptr_id
where tt.status!=7 and au.is_active=True and au.is_staff=True
group by tt.assigned_to_id, e.full_name, au.staff_type, e.staff_type, tt.category_id, tc.name),

open_past_due_tickets AS (
SELECT
now()::date timestam_date,
count(distinct(tt.id)) qty_open_past_due_tickets,
tt.assigned_to_id agent_id,
e.full_name agent_name,
au.staff_type staff_type_id,
e.staff_type staff_type_name,
tt.category_id category_id,
tc.name category_name
from tickets_ticket tt
left join tickets_ticketcategory tc on tt.category_id=tc.id
left join employee e on tt.assigned_to_id=e.user_id
left join accounts_user au on tt.assigned_to_id=au.customer_ptr_id
where now()>tt.deadline and tt.status!=7 and au.is_active=True and au.is_staff=True
group by tt.assigned_to_id, e.full_name, au.staff_type, e.staff_type, tt.category_id, tc.name)

(SELECT
ot.timestam_date,
ot.agent_id,
ot.agent_name,
ot.staff_type_id,
ot.staff_type_name,
ot.category_id,
ot.category_name,
ot.total_open_tickets total_tickets,
opt.qty_open_past_due_tickets past_due_tickets,
'open tickets' type_tickets
from all_open_tickets ot
left join open_past_due_tickets opt on ot.agent_id=opt.agent_id and ot.category_id=opt.category_id
order by 2)
UNION
(SELECT
cp.timestam_date,
cp.agent_id,
cp.agent_name,
cp.staff_type_id,
cp.staff_type_name,
cp.category_id,
cp.category_name,
cp.total_completed_tickets total_tickets,
cpt.qty_completed_past_due_tickets past_due_tickets,
'completed tickets' type_tickets
from all_completed_tickets cp
full join competed_past_due_tickets cpt on cp.agent_id=cpt.agent_id and cp.category_id=cpt.category_id
order by 2)
order by 2


Michelle Sales Tickets
with tab1 as(
select
tt."created_at (PST)"::date created_at,
tt."id" ticket_id,
tt."status" ticket_status,
tn."note"
from "tickets_ticket" tt
left join "tickets_ticketnotes" tn on tt."id"=tn."ticket_id" --and tn."user_id"=90042
where tt."assigned_to_id"=90042 and tt."category_id"=48 and tt."text" ilike '%Please contact the MRO customers who has recently completed%' and tn."note" not ilike '%Not%target%' and tn."note" not ilike '%non%target%'
order by 1,2),

tab2 as(
select distinct
created_at,
ticket_id,
ticket_status,
CASE
WHEN note ilike '%pending%2%Attempt%' THEN count(ticket_id)
END
AS first_pending_second,
CASE
WHEN note ilike '%1%Attempt%Call Attempts Completed%' THEN count(ticket_id)
END
AS first_completed,
CASE
WHEN note ilike '%#sendbeltcatalog%' THEN count(ticket_id)
END
AS send_book,
CASE
WHEN note ilike '%Customer Not Interested in Booklet%' THEN count(ticket_id)
END
AS not_interes,
CASE
WHEN note ilike '%2nd Contact Attempt%Call Attempts Completed%' THEN count(ticket_id)
END
AS second_completed,
CASE
WHEN note ilike '%#removefromcontacts%' THEN count(ticket_id)
END
AS remove,
CASE
WHEN note ilike '%#beltbookdelivered%' THEN count(ticket_id)
END
AS delivered,
CASE
WHEN note ilike '%#followupbeltemailsent%' THEN count(ticket_id)
END
AS followup_sent,
CASE
WHEN note ilike '%#shipping%address%' THEN note
END
AS shipping_address,
CASE
WHEN note ilike '%#additional_notes%' THEN note
END
AS other_notes,
CASE
WHEN note ilike '%#followupbeltemailresponse%' THEN note
END
AS followup_email_response
from tab1
group by created_at, ticket_id, note, ticket_status
order by 1,2),

tab3 as(
select distinct
created_at,
ticket_id,
ticket_status,
sum(first_pending_second) pending_second,
sum(first_completed) after_first_completed,
sum(second_completed) after_second_completed,
sum(remove) remove_email,
sum(not_interes) not_interested,
sum(send_book) send_belt_book,
sum(delivered) belt_book_delivered,
sum(followup_sent) followup_email_sent
from tab2
group by created_at, ticket_id, ticket_status
having pending_second is not null or after_first_completed is not null or after_second_completed is not null or remove_email is not null or not_interested is not null or send_belt_book is not null or belt_book_delivered is not null or followup_email_sent is not null
order by 1,2),

tab4 as(
select distinct
tab3.created_at,
tab3.ticket_id,
tab3.ticket_status,
tab3.pending_second,
tab3.after_first_completed,
tab3.after_second_completed,
tab3.remove_email,
tab3.not_interested,
tab3.send_belt_book,
tab3.belt_book_delivered,
tab3.followup_email_sent,
max(tab2.shipping_address) shipping_address,
max(tab2.other_notes) other_notes,
max(tab2.followup_email_response) followup_email_response
from tab3
left join tab2 on tab3.ticket_id=tab2.ticket_id
group by tab3.created_at,tab3.ticket_id,tab3.ticket_status,tab3.pending_second,tab3.after_first_completed,tab3.after_second_completed,tab3.remove_email,tab3.not_interested,tab3.send_belt_book,tab3.belt_book_delivered,tab3.followup_email_sent
order by 1,2)

select * from tab4


Past Due Shipments_Daily
with past_due_shipments as (
    select
    to_char(current_date, 'Day') today,
    case
    when to_char(current_date, 'Day') ilike '%monday%' then 4
    when to_char(current_date, 'Day') ilike '%tuesday%' then 4
    else 2
    end
    as different,
    current_date timestam,
    COUNT("estimated_ship_date") qty
    from shipments_shipment ss
    left join orders_item oi on ss.item_id=oi.id
    left join  orders_order oo on oi.order_id=oo.order_id
    WHERE oo.status IN (6, 14) AND ss.is_shipped=false AND ss.estimated_ship_date < (current_date-(case
    when to_char(current_date, 'Day') ilike '%monday%' then 4
    when to_char(current_date, 'Day') ilike '%tuesday%' then 4
    else 2
    end))
),
total_shipments AS (
	SELECT * FROM shipments_shipment AS ship
	left join orders_item oi on ship.item_id=oi.id
    left join  orders_order oo on oi.order_id=oo.order_id
	WHERE oo.status IN (6, 14) AND ship.is_shipped=false)

SELECT
       current_date AS Timestamp,
       (SELECT qty FROM past_due_shipments) AS Past_Due,
	   (SELECT COUNT(*) FROM total_shipments) AS Total_not_shipped,
	   round(100.00 - (((SELECT qty FROM past_due_shipments) + 0.0) * 100 / (SELECT COUNT(*)
	   FROM total_shipments)),2) AS KPI



